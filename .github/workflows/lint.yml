name: Lint

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-1.22-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-1.22-
          ${{ runner.os }}-go-
    
    - name: Download dependencies
      run: go mod download
    
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=10m --verbose
        
  security:
    name: security-scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'
    
    - name: Run Gosec Security Scanner
      run: |
        go install github.com/securecodewarrior/gosec/v2/cmd/gosec@latest
        gosec ./...

  format:
    name: format-check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'
    
    - name: Check Go formatting
      run: |
        if [ -n "$(gofmt -l .)" ]; then
          echo "Go files are not formatted. Please run: go fmt ./..."
          gofmt -l .
          exit 1
        fi
    
    - name: Check Go imports
      run: |
        go install golang.org/x/tools/cmd/goimports@latest
        if [ -n "$(goimports -l .)" ]; then
          echo "Go imports are not properly organized. Please run: goimports -w ."
          goimports -l .
          exit 1
        fi
    
    - name: Check Go modules
      run: |
        go mod tidy
        if [ -n "$(git status --porcelain go.mod go.sum)" ]; then
          echo "Go modules are not tidy. Please run: go mod tidy"
          git diff go.mod go.sum
          exit 1
        fi 